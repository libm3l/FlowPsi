//#############################################################################
//#
//# Copyright 2016, Mississippi State University
//#
//# This file is part of the flowPsi computational fluid dynamics solver.
//#
//# The flowPsi solver is free software: you can redistribute it and/or modify
//# it under the terms of the GNU General Public License as published by
//# the Free Software Foundation, either version 3 of the License, or
//# (at your option) any later version.
//#
//# The flowPsi solver is distributed in the hope that it will be useful,
//# but WITHOUT ANY WARRANTY; without even the implied warranty of
//# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//# GNU General Public License for more details.
//#
//# You should have received a copy of the GNU General Public License
//# along with the flowPsi solver.  If not, see <http://www.gnu.org/licenses>
//#
//#############################################################################
#include <string>
#include <sstream>
#include <stdlib.h>
#include <fstream>
#include <Loci.h>
#include <flowTypes.h>
#include <flowPsiIO.h>

using std::string ;
$include "TSM.lh"

namespace flowPsi {
  //--------------------------------------------------------------------------
  // Output scalar kT, kL, or w_tsm if selected in plot_output
  OUTPUT_SCALAR("cell2node(kT)",kT) ;
  OUTPUT_SCALAR("cell2node(kL)",kL) ;
  OUTPUT_SCALAR("cell2node(w_tsm)",w_tsm) ;
  OUTPUT_SCALAR("cell2nodeMAX(strainRate)",strainRate) ;
  OUTPUT_SCALAR("cell2node(tmu)",tmu) ;
  OUTPUT_BNDRY_SCALAR("tmu_f",btmu,"ci") ;
  //  OUTPUT_SCALAR("cell2nodeMaxMag(TSM1_Lphi)",TSM1_Lphi);
  //  OUTPUT_SCALAR("cell2nodeMaxMag(TSM2_Lphi)",TSM2_Lphi);
  //  OUTPUT_SCALAR("cell2nodeMaxMag(TSM3_Lphi)",TSM3_Lphi);
}
